name: Backend Deploy

on:
  push:
    branches:
      - "main"
      - "23-fix-cors"

permissions:
  contents: read
  actions: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 환경변수 설정
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.datasource.url: jdbc:mysql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_SCHEMA }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          jwt.secretKey: ${{ secrets.SECRET_KEY }}
          kakao.key.client-id: ${{ secrets.REST_API_KEY }}
          kakao.redirect-uri: ${{ secrets.REDIRECT_URI }}
          coolsms.api-key: ${{ secrets.SMS_API_KEY }}
          coolsms.api-secret: ${{ secrets.SMS_SECRET_KEY }}
          coolsms.sender: ${{ secrets.SMS_PHONE_NUMBER }}

      - name: Gradle 빌드
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: 파일 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "build/libs/*.jar"
          target: "~/app"

      - name: 애플리케이션 재시작
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd ~/app
            
            # 이전 프로세스 종료
            if [ -f app.pid ]; then
              kill $(cat app.pid) || true
              rm app.pid
            fi
            
            # 새로운 프로세스 시작 (백그라운드로)
            JAR_FILE="build/libs/letter-0.0.1-SNAPSHOT.jar"
            
            # 로그 초기화
            echo "" > app.log
            
            # 프로세스 시작 및 PID 저장을 분리
            java -jar "$JAR_FILE" > app.log 2>&1 & 
            echo $! > app.pid
            
            # 짧은 대기
            sleep 2
            
            # PID로 프로세스 확인
            if [ -f app.pid ] && ps -p $(cat app.pid) > /dev/null; then
              echo "Application started with PID: $(cat app.pid)"
              exit 0
            else
              echo "Failed to start application"
              cat app.log
              exit 1
            fi