name: Backend Deploy

on:
  push:
    branches:
      - "main"
      - "5-feat-deployment"
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 환경변수 설정
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.datasource.url: jdbc:mysql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_SCHEMA }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}

      - name: Gradle 빌드
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test  # 테스트 제외 (이미 CI에서 검증됨)

      - name: 파일 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "build/libs/*.jar"
          target: "~/app"

      - name: 애플리케이션 재시작
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # 현재 실행 중인 프로세스 확인
            echo "현재 실행 중인 Java 프로세스:"
            ps aux | grep java
            
            # 기존 프로세스 종료
            pkill -f 'java -jar' || true
            sleep 5
            
            echo "프로세스 종료 후 상태:"
            ps aux | grep java
            
            # app 디렉토리로 이동
            cd ~/app
            pwd
            ls -la
            
            # 새 프로세스 시작
            nohup java -jar *.jar > app.log 2>&1 & 
            echo $! > app.pid
            
            # 즉시 상태 확인
            echo "새 프로세스 PID: $(cat app.pid)"
            ps -p $(cat app.pid) || true
            
            # 로그 확인
            sleep 10
            echo "애플리케이션 로그:"
            tail -n 20 app.log